// Generated by CoffeeScript 1.12.3
(function() {
  var download, onsen, path, suzu;

  onsen = require('../onsen');

  path = require('path');

  suzu = require('suzu-downloader');

  download = new suzu();

  module.exports = {
    help: function() {
      return console.log("\n onsen-node CLI.\n usage: onsen <command> [<args>]\n \n -h, --help             ヘルプ。\n list      [<week>]     番組一覧\n search     <keyword>   番組の検索\n download   <name>      音声・動画ダウンロード\n info       <name>      番組の情報\n");
    },
    list: function(week) {
      return onsen.getList((function(_this) {
        return function(list) {
          if (week === void 0) {
            return _this.listAll(list);
          } else {
            return _this.listWeek(list, week, function() {});
          }
        };
      })(this));
    },
    listAll: function(list) {
      return this.showAll(list, 0);
    },
    listWeek: function(list, week, fn) {
      var _list, _week;
      week = this.castWeek(week);
      _week = this.kanaWeek(week);
      _list = list[week];
      console.log(_week);
      return this.showTitle(_list, 0, fn);
    },
    castWeek: function(week) {
      var date, list, today;
      list = ["sat", "mon", "tue", "wed", "thu", "fri", "sat"];
      date = new Date();
      today = list[date.getDay()];
      if (week === '月' || week === 'mon') {
        return list[1];
      } else if (week === '火' || week === 'tue') {
        return list[2];
      } else if (week === '水' || week === 'wed') {
        return list[3];
      } else if (week === '木' || week === 'thu') {
        return list[4];
      } else if (week === '金' || week === 'fri') {
        return list[5];
      } else if (week === '土' || week === 'sat') {
        return list[6];
      } else if (week === '日' || week === 'sun') {
        return list[0];
      } else if (week === '今日' || week === 'today') {
        return today;
      } else {
        return today;
      }
    },
    kanaWeek: function(week) {
      var date, list, today;
      list = ["土・日", "月", "火", "水", "木", "金", "土・日"];
      date = new Date();
      today = list[date.getDay()];
      if (week === 'mon') {
        return list[1];
      } else if (week === 'tue') {
        return list[2];
      } else if (week === 'wed') {
        return list[3];
      } else if (week === 'thu') {
        return list[4];
      } else if (week === 'fri') {
        return list[5];
      } else if (week === 'sat') {
        return list[6];
      } else if (week === 'sun') {
        return list[0];
      } else if (week === 'today') {
        return today;
      } else {
        return today;
      }
    },
    showTitle: function(list, i, fn) {
      var len;
      len = list.length - 1;
      return onsen.getInfo(list[i], (function(_this) {
        return function(info) {
          console.log('    [ ' + list[i] + ' ] ' + info.title);
          i += 1;
          if (len <= i) {
            return fn();
          } else {
            return _this.showTitle(list, i, fn);
          }
        };
      })(this));
    },
    showAll: function(list, i) {
      var _week, len, week;
      week = ["mon", "tue", "wed", "thu", "fri", "sat"];
      _week = this.kanaWeek(week[i]);
      len = 5;
      console.log(_week + '曜日');
      return this.showTitle(list[week[i]], 0, (function(_this) {
        return function() {
          if (len <= i) {

          } else {
            i += 1;
            return _this.showAll(list, i);
          }
        };
      })(this));
    },
    search: function(keyword) {
      return onsen.search(keyword, function(list) {
        var j, len1, name, results;
        if (list.length <= 0) {
          console.log("\n番組が見つかりませんでした。\n");
          return;
        }
        results = [];
        for (j = 0, len1 = list.length; j < len1; j++) {
          name = list[j];
          results.push(onsen.getInfo(name, function(info) {
            return console.log('[ ' + name + ' ] ' + info.title);
          }));
        }
        return results;
      });
    },
    info: function(name) {
      return onsen.getInfo(name, function(info) {
        if (info === null) {
          console.log('\n番組が見つかりませんでした。\n');
          return;
        }
        return console.log("\n title:       " + info.title + "\n personality: " + info.personality + "\n guest:       " + info.guest + "\n update:      " + info.update + "\n count:       " + info.count + "\n schedule:    " + info.schedule + "\n mail:        " + info.mail + "\n file:        " + info.moviePath.pc + "\n");
      });
    },
    download: function(name) {
      return onsen.getInfo(name, function(info) {
        var count, ext, file_name, link;
        if (info === null) {
          console.log('\n番組が見つかりませんでした。\n');
          return;
        }
        link = info.moviePath.pc;
        count = info.count;
        ext = path.extname(link);
        file_name = name + '_' + count + ext;
        return download.get({
          url: link,
          path: file_name
        });
      });
    }
  };

}).call(this);
